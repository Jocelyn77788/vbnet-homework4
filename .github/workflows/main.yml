name: Build WinForms EXEs

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      # 如果你已上传 5 个 zip（作业4-1.zip ~ 作业4-5.zip），先解压
      - name: Unzip project zips (if any)
        shell: pwsh
        run: |
          Get-ChildItem -Filter *.zip | ForEach-Object {
            Write-Host "Unzipping $($_.Name)"
            Expand-Archive -Path $_.FullName -DestinationPath .
          }

      - name: List found vbproj
        shell: pwsh
        run: |
          Write-Host "VBPROJ files:"
          Get-ChildItem -Recurse -Filter *.vbproj | Select-Object -ExpandProperty FullName

      - name: Build ALL vbproj (turn off auto-include)
        shell: cmd
        run: |
          for /r %%f in (*.vbproj) do (
            echo ===== Building %%f =====
            msbuild "%%f" /p:Configuration=Release /p:EnableDefaultCompileItems=false /m
          )

      - name: Collect EXEs and rename
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Path out -Force | Out-Null
          $map = @{
            "作业4-1" = "3-1.exe"
            "作业4-2" = "3-2.exe"
            "作业4-3" = "3-3.exe"
            "作业4-4" = "3-4.exe"
            "作业4-5" = "3-5.exe"
          }
          foreach ($k in $map.Keys) {
            $exe = Get-ChildItem -Recurse -Filter *.exe | Where-Object {
              $_.FullName -match [Regex]::Escape($k) -and $_.FullName -match "\\bin\\Release\\"
            } | Select-Object -First 1
            if ($exe) {
              Copy-Item $exe.FullName (Join-Path "out" $map[$k]) -Force
              Write-Host "OK: $($exe.FullName) -> out\$($map[$k])"
            } else {
              Write-Host "SKIP: no Release exe for $k"
            }
          }

      - name: Upload EXEs
        uses: actions/upload-artifact@v4
        with:
          name: EXE_Files
          path: out/*.exe
